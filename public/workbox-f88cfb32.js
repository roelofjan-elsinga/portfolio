define("./workbox-f88cfb32.js",["exports"],(function(e){"use strict";try{self["workbox:core:5.1.3"]&&_()}catch(e){}const t=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class s extends Error{constructor(e,s){super(t(e,s)),this.name=e,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const n=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,s="GET"){this.handler=n(t),this.match=e,this.method=s}}class r extends i{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const o=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class c{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:i}=this.findMatchingRoute({url:s,request:e,event:t});let r,o=i&&i.handler;if(!o&&this.s&&(o=this.s),o){try{r=o.handle({url:s,request:e,event:t,params:n})}catch(e){r=Promise.reject(e)}return r instanceof Promise&&this.i&&(r=r.catch(n=>this.i.handle({url:s,request:e,event:t}))),r}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const i of n){let n;const r=i.match({url:e,request:t,event:s});if(r)return n=r,(Array.isArray(r)&&0===r.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(n=void 0),{route:i,params:n}}return{}}setDefaultHandler(e){this.s=n(e)}setCatchHandler(e){this.i=n(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new s("unregister-route-but-not-found-with-method",{method:e.method});const t=this.t.get(e.method).indexOf(e);if(!(t>-1))throw new s("unregister-route-route-not-registered");this.t.get(e.method).splice(t,1)}}let a;const u=()=>(a||(a=new c,a.addFetchListener(),a.addCacheListener()),a);try{self["workbox:cacheable-response:5.1.3"]&&_()}catch(e){}class h{constructor(e={}){this.o=e.statuses,this.u=e.headers}isResponseCacheable(e){let t=!0;return this.o&&(t=this.o.includes(e.status)),this.u&&t&&(t=Object.keys(this.u).some(t=>e.headers.get(t)===this.u[t])),t}}const l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[l.prefix,e,l.suffix].filter(e=>e&&e.length>0).join("-"),w=e=>e||f(l.precache),p=e=>e||f(l.runtime),d=new Set;const y=(e,t)=>e.filter(e=>t in e),g=async({request:e,mode:t,plugins:s=[]})=>{const n=y(s,"cacheKeyWillBeUsed");let i=e;for(const e of n)i=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:i}),"string"==typeof i&&(i=new Request(i));return i},m=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:i=[]})=>{const r=await self.caches.open(e),o=await g({plugins:i,request:t,mode:"read"});let c=await r.match(o,n);for(const t of i)if("cachedResponseWillBeUsed"in t){const i=t.cachedResponseWillBeUsed;c=await i.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:c,request:o})}return c},q=async({cacheName:e,request:t,response:n,event:i,plugins:r=[],matchOptions:c})=>{const a=await g({plugins:r,request:t,mode:"write"});if(!n)throw new s("cache-put-with-no-response",{url:o(a.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let i=t,r=!1;for(const t of n)if("cacheWillUpdate"in t){r=!0;const n=t.cacheWillUpdate;if(i=await n.call(t,{request:e,response:i,event:s}),!i)break}return r||(i=i&&200===i.status?i:void 0),i||null})({event:i,plugins:r,response:n,request:a});if(!u)return;const h=await self.caches.open(e),l=y(r,"cacheDidUpdate"),f=l.length>0?await m({cacheName:e,matchOptions:c,request:a}):null;try{await h.put(a,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const t of l)await t.cacheDidUpdate.call(t,{cacheName:e,event:i,oldResponse:f,newResponse:u,request:a})},R=m,v=async({request:e,fetchOptions:t,event:n,plugins:i=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const r=y(i,"fetchDidFail"),o=r.length>0?e.clone():null;try{for(const t of i)if("requestWillFetch"in t){const s=t.requestWillFetch,i=e.clone();e=await s.call(t,{request:i,event:n})}}catch(e){throw new s("plugin-error-request-will-fetch",{thrownError:e})}const c=e.clone();try{let s;s="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of i)"fetchDidSucceed"in e&&(s=await e.fetchDidSucceed.call(e,{event:n,request:c,response:s}));return s}catch(e){for(const t of r)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:o.clone(),request:c.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const U={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let L;async function x(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=t?t(n):n,r=function(){if(void 0===L){const e=new Response("");if("body"in e)try{new Response(e.body),L=!0}catch(e){L=!1}L=!1}return L}()?s.body:await s.blob();return new Response(r,i)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function N(e){if(!e)throw new s("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new s("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const i=new URL(n,location.href),r=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",t),{cacheKey:i.href,url:r.href}}class b{constructor(e){this.h=w(e),this.l=new Map,this.p=new Map,this.g=new Map}addToCacheList(e){const t=[];for(const n of e){"string"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:i}=N(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this.l.has(i)&&this.l.get(i)!==e)throw new s("add-to-cache-list-conflicting-entries",{firstEntry:this.l.get(i),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.g.has(e)&&this.g.get(e)!==n.integrity)throw new s("add-to-cache-list-conflicting-integrities",{url:i});this.g.set(e,n.integrity)}if(this.l.set(i,e),this.p.set(i,r),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],i=await self.caches.open(this.h),r=await i.keys(),o=new Set(r.map(e=>e.url));for(const[e,t]of this.l)o.has(t)?n.push(e):s.push({cacheKey:t,url:e});const c=s.map(({cacheKey:s,url:n})=>{const i=this.g.get(s),r=this.p.get(n);return this.m({cacheKey:s,cacheMode:r,event:e,integrity:i,plugins:t,url:n})});await Promise.all(c);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.h),t=await e.keys(),s=new Set(this.l.values()),n=[];for(const i of t)s.has(i.url)||(await e.delete(i),n.push(i.url));return{deletedURLs:n}}async m({cacheKey:e,url:t,cacheMode:n,event:i,plugins:r,integrity:o}){const c=new Request(t,{integrity:o,cache:n,credentials:"same-origin"});let a,u=await v({event:i,plugins:r,request:c});for(const e of r||[])"cacheWillUpdate"in e&&(a=e);if(!(a?await a.cacheWillUpdate({event:i,request:c,response:u}):u.status<400))throw new s("bad-precaching-response",{url:t,status:u.status});u.redirected&&(u=await x(u)),await q({event:i,plugins:r,response:u,request:e===t?c:new Request(e),cacheName:this.h,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.l}getCachedURLs(){return[...this.l.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.l.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.h)).match(s)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new s("missing-precache-entry",{cacheName:this.h,url:t instanceof Request?t.url:t})}catch(s){if(e)return fetch(t);throw s}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new s("non-precached-url",{url:e});const n=this.createHandler(t),i=new Request(e);return()=>n({request:i})}}let O;const M=()=>(O||(O=new b),O);const E=(e,t)=>{const s=M().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:i}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const o=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(r,t);if(yield o.href,s&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=s,yield e.href}if(n){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(i){const e=i({url:r});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let P=!1;function C(e){P||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const i=w();self.addEventListener("fetch",r=>{const o=E(r.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!o)return;let c=self.caches.open(i).then(e=>e.match(o)).then(e=>e||fetch(o));r.respondWith(c)})})(e),P=!0)}const K=[],T={get:()=>K,add(e){K.push(...e)}},S=e=>{const t=M(),s=T.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},W=e=>{const t=M();e.waitUntil(t.activate())};e.CacheFirst=class{constructor(e={}){this.h=p(e.cacheName),this.q=e.plugins||[],this.R=e.fetchOptions,this.v=e.matchOptions}async handle({event:e,request:t}){"string"==typeof t&&(t=new Request(t));let n,i=await R({cacheName:this.h,request:t,event:e,matchOptions:this.v,plugins:this.q});if(!i)try{i=await this.U(t,e)}catch(e){n=e}if(!i)throw new s("no-response",{url:t.url,error:n});return i}async U(e,t){const s=await v({request:e,event:t,fetchOptions:this.R,plugins:this.q}),n=s.clone(),i=q({cacheName:this.h,request:e,response:n,event:t,plugins:this.q});if(t)try{t.waitUntil(i)}catch(e){}return s}},e.CacheableResponsePlugin=class{constructor(e){this.cacheWillUpdate=async({response:e})=>this.L.isResponseCacheable(e)?e:null,this.L=new h(e)}},e.NetworkFirst=class{constructor(e={}){if(this.h=p(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.q=t?e.plugins:[U,...e.plugins]}else this.q=[U];this.N=e.networkTimeoutSeconds||0,this.R=e.fetchOptions,this.v=e.matchOptions}async handle({event:e,request:t}){const n=[];"string"==typeof t&&(t=new Request(t));const i=[];let r;if(this.N){const{id:s,promise:o}=this._({request:t,event:e,logs:n});r=s,i.push(o)}const o=this.O({timeoutId:r,request:t,event:e,logs:n});i.push(o);let c=await Promise.race(i);if(c||(c=await o),!c)throw new s("no-response",{url:t.url});return c}_({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.M({request:e,event:s}))},1e3*this.N)}),id:n}}async O({timeoutId:e,request:t,logs:s,event:n}){let i,r;try{r=await v({request:t,event:n,fetchOptions:this.R,plugins:this.q})}catch(e){i=e}if(e&&clearTimeout(e),i||!r)r=await this.M({request:t,event:n});else{const e=r.clone(),s=q({cacheName:this.h,request:t,response:e,event:n,plugins:this.q});if(n)try{n.waitUntil(s)}catch(e){}}return r}M({event:e,request:t}){return R({cacheName:this.h,request:t,event:e,matchOptions:this.v,plugins:this.q})}},e.clientsClaim=function(){self.addEventListener("activate",()=>self.clients.claim())},e.precacheAndRoute=function(e,t){!function(e){M().addToCacheList(e),e.length>0&&(self.addEventListener("install",S),self.addEventListener("activate",W))}(e),C(t)},e.registerRoute=function(e,t,n){let o;if("string"==typeof e){const s=new URL(e,location.href);o=new i(({url:e})=>e.href===s.href,t,n)}else if(e instanceof RegExp)o=new r(e,t,n);else if("function"==typeof e)o=new i(e,t,n);else{if(!(e instanceof i))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});o=e}return u().registerRoute(o),o},e.skipWaiting=function(){self.addEventListener("install",()=>self.skipWaiting())}}));
